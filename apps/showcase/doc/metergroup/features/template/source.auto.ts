/****************************************************************************
****************** PrimeReact Demo Source (Auto-Generated) ******************
*****************************************************************************/

export const source = {
    "code": "import { MeterGroup } from 'primereact/metergroup';\n\nexport default function TemplateDemo() {\n    const values = [\n        { label: 'Apps', color1: '#34d399', color2: '#fbbf24', value: 25, icon: 'pi pi-table' },\n        { label: 'Messages', color1: '#fbbf24', color2: '#60a5fa', value: 15, icon: 'pi pi-inbox' },\n        { label: 'Media', color1: '#60a5fa', color2: '#c084fc', value: 20, icon: 'pi pi-image' },\n        { label: 'System', color1: '#c084fc', color2: '#c084fc', value: 10, icon: 'pi pi-cog' }\n    ];\n\n    const totalPercent = values.reduce((acc, value) => acc + value.value, 0);\n\n    const percent = (meter: number) => {\n        return Math.round(Math.max(0, Math.min(100, (meter / 100) * 100))) + '%';\n    };\n\n    return (\n        <div className=\"card\">\n            <MeterGroup max={200} aria-valuenow={totalPercent}>\n                <MeterGroup.Labels>\n                    {values.map((value, index) => (\n                        <MeterGroup.Label key={`label_${index}`}>\n                            {/* <Card className=\"flex-1 border border-surface shadow-none\">\n                                <div className=\"flex justify-between gap-8\">\n                                    <div className=\"flex flex-col gap-1\">\n                                        <span className=\"text-surface-500 dark:text-surface-400 text-sm\">{value.label}</span>\n                                        <span className=\"font-bold text-lg\">{value.value}%</span>\n                                    </div>\n                                    <span className=\"w-8 h-8 rounded-full inline-flex justify-center items-center text-center\" style={{ backgroundColor: `${value.color1}`, color: '#ffffff' }}>\n                                        <i className={value.icon} />\n                                    </span>\n                                </div>\n                            </Card> */}\n                        </MeterGroup.Label>\n                    ))}\n                </MeterGroup.Labels>\n                <div className=\"flex justify-between mt-4 mb-2 relative\">\n                    <span>Storage</span>\n                    <span style={{ width: totalPercent + '%' }} className=\"absolute text-right\">\n                        {totalPercent}%\n                    </span>\n                    <span className=\"font-medium\">1TB</span>\n                </div>\n\n                <MeterGroup.Meters>\n                    {values.map((value, index) => (\n                        <MeterGroup.Meter asChild key={`meter_${index}`}>\n                            {(instance) => {\n                                return (\n                                    <span\n                                        key={`meter_${index}`}\n                                        className={instance.className}\n                                        style={{\n                                            background: `linear-gradient(to right, ${value.color1}, ${value.color2})`,\n                                            width: percent(value.value)\n                                        }}\n                                    />\n                                );\n                            }}\n                        </MeterGroup.Meter>\n                    ))}\n                </MeterGroup.Meters>\n                {/* <div className=\"flex justify-between mt-4\">\n                    <Button label=\"Manage Storage\" outlined size=\"small\" />\n                    <Button label=\"Update Plan\" size=\"small\" />\n                    </div> */}\n            </MeterGroup>\n        </div>\n    );\n}\n"
};
